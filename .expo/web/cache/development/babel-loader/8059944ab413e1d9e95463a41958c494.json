{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\rashi\\\\Desktop\\\\reactNative\\\\C74ScrollView\\\\screens\\\\LoginScreen.js\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as firebase from 'firebase';\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  function LoginScreen() {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginScreen).call(this));\n\n    _this.Login = function _callee(email, password) {\n      var response;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(email && password)) {\n                _context.next = 20;\n                break;\n              }\n\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(email, password));\n\n            case 4:\n              response = _context.sent;\n\n              if (response) {\n                _this.props.navigation.navigate('Transaction');\n              }\n\n              _context.next = 18;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              _context.t1 = _context.t0.code;\n              _context.next = _context.t1 === 'auth/user-not-found' ? 13 : _context.t1 === 'auth/invalid-email' ? 16 : 18;\n              break;\n\n            case 13:\n              Alert.alert(\"User doesnt exists\");\n              console.log(\"doesnt exist\");\n              return _context.abrupt(\"break\", 18);\n\n            case 16:\n              Alert.alert(\"Incorrect email or password\");\n              console.log(\"Invalid\");\n\n            case 18:\n              _context.next = 21;\n              break;\n\n            case 20:\n              Alert.alert(\"Enter email and password\");\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 8]]);\n    };\n\n    _this.state = {\n      emailId: \"\",\n      password: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(KeyboardAvoidingView, {\n        style: {\n          alignContent: 'center',\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/booklogo.jpg\"),\n        style: {\n          width: 200,\n          height: 200\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        }\n      }), React.createElement(Text, {\n        style: {\n          textAlign: 'center',\n          fontSize: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        }\n      }, \"WILY\")), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        }\n      }, React.createElement(TextInput, {\n        style: styles.loginBox,\n        placeholder: \"abcd@example.com\",\n        keyboardType: \"email-address\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            emailId: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        }\n      }), React.createElement(TextInput, {\n        style: styles.loginBox,\n        secureTextEntry: true,\n        placeholder: \"enter password\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            password: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          height: 30,\n          width: 90,\n          borderWidth: 1,\n          marginTop: 20,\n          paddingTop: 10,\n          borderRadius: 15\n        },\n        onPress: function onPress() {\n          _this2.Login(_this2.state.emailId, _this2.state.password);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        }\n      }, \"LOGIN\"))));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };\nvar styles = StyleSheet.create({\n  loginBox: {\n    width: 300,\n    height: 40,\n    borderWidth: 1.5,\n    fontSize: 20,\n    margin: 10,\n    paddingLeft: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/rashi/Desktop/reactNative/C74ScrollView/screens/LoginScreen.js"],"names":["React","firebase","LoginScreen","Login","email","password","auth","signInWithEmailAndPassword","response","props","navigation","navigate","code","Alert","alert","console","log","state","emailId","alignContent","marginTop","require","width","height","textAlign","fontSize","styles","loginBox","text","setState","borderWidth","paddingTop","borderRadius","Component","StyleSheet","create","margin","paddingLeft"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Text, View, StyleSheet, Image, TextInput, \r\nKeyboardAvoidingView, TouchableOpacity, Alert } from 'react-native';\r\nimport * as firebase from 'firebase';\r\n\r\nexport default class LoginScreen extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            emailId: \"\",\r\n            password: \"\"\r\n        }\r\n    }\r\n\r\n    Login=async(email, password)=>{\r\n        if(email && password){\r\n            try{\r\n                const response = await firebase.auth()\r\n                .signInWithEmailAndPassword(email, password)\r\n                if(response){\r\n                    this.props.navigation.navigate('Transaction')\r\n                }\r\n            }\r\n            catch(error){\r\n                switch(error.code){\r\n                    case 'auth/user-not-found':\r\n                        Alert.alert(\"User doesnt exists\")\r\n                        console.log(\"doesnt exist\")\r\n                    break;\r\n                    case 'auth/invalid-email':\r\n                        Alert.alert(\"Incorrect email or password\");\r\n                        console.log(\"Invalid\");\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            Alert.alert(\"Enter email and password\")\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <KeyboardAvoidingView style = {{alignContent: 'center', marginTop: 20}}>\r\n                <View>\r\n                    <Image \r\n                    source = {require(\"../assets/booklogo.jpg\")}\r\n                    style={{width:200, height:200}}/>\r\n                    <Text style={{textAlign: 'center', fontSize:30}}>WILY</Text>\r\n                </View>\r\n                <View>\r\n                    <TextInput\r\n                    style = {styles.loginBox}\r\n                    placeholder=\"abcd@example.com\"\r\n                    keyboardType = \"email-address\"\r\n                    onChangeText={(text)=>{\r\n                        this.setState({emailId: text})\r\n                    }} />\r\n\r\n                    <TextInput\r\n                    style = {styles.loginBox}\r\n                    secureTextEntry = {true}\r\n                    placeholder=\"enter password\"\r\n                    onChangeText={(text)=>{\r\n                        this.setState({password: text})\r\n                    }} />\r\n                </View>\r\n                <View>\r\n                    <TouchableOpacity\r\n                    style = {{height:30, width:90, borderWidth:1, \r\n                    marginTop:20, paddingTop: 10, borderRadius: 15}}\r\n                    onPress={()=>{this.Login(this.state.emailId, this.state.password)}} >\r\n                        <Text style={{textAlign: 'center'}}>LOGIN</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </KeyboardAvoidingView>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    loginBox:{\r\n        width: 300,\r\n        height: 40,\r\n        borderWidth: 1.5,\r\n        fontSize: 20,\r\n        margin:10,\r\n        paddingLeft: 10\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}